<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="us.duia.leejo0531.dao.QuestionMapper">
	<resultMap type="Question" id="QuestionResult">
		<id property="questionNum" column="questionNum"/>
		<result property="userNum" column="userNum"/>
		<result property="timeLimit" column="timeLimit"/>
		<result property="qstatus" column="qstatus"/>
		<result property="regDate" column="regDate"/>
		<result property="modDate" column="modDate"/>
		<result property="title" column="title"/>
		<result property="MinorNum" column="MinorNum"/>
		<result property="videoSrc" column="videoSrc"/>
		<result property="questionContent" column="questionContent"/>
		<result property="score" column="score"/>
		<collection property="relatedTag" javaType="ArrayList" ofType="string">
			<result property="tag" column="tag"/>
		</collection>
	</resultMap>


	<!-- 질문글을 게시한다. -->
	<insert id="insertQuestion" parameterType="Question">
		insert into Q_Board(
			questionNum,
			userNum,
			timeLimit,
			id,
			regDate,
			modDate,
			title,
			hit,
			questionContent
		) values(
			Q_Board_SEQ.nextval,
			#{userNum},
			#{timeLimit},
			#{id},
			#{regDate},
			#{modDate},
			#{title},
			0,
			#{questionContent}
		)
	</insert>
	
	<!-- 질문글을 삭제한다. (임시) 테스트 되지않음.-->
	<delete id="deleteQuestion" parameterType="Question">
	delete Q_BOARD where usernum = #{usernum} and QuestionNum = #{QuestionNum}
	</delete>
	
	<!-- 대분류 리스트 불러오기 -->	
	<select id="getMajorList" resultType="Major">
		select * from major order by majorNum
	</select>
	
	<select id="getMajor" parameterType="int" resultType="Major">
		select * from major where majorNum = #{majorNum}
	</select>
	
	<!-- 소분류 리스트 불러오기 -->
	<select id="getMinorList" resultType="Minor">
		select * from minor order by minorNum
	</select>
	
	<select id="getMinor" parameterType="int" resultType="Minor">
		select * from minor where minorNum = #{minorNum}
	</select>
	
	<!-- 대상 질문글 정보를 가져온다.(임시) -->
	<select id="selectOneQuestion" parameterType="Question" resultType="Question">
		select *
		from Q_Board
		where questionNum = #{questionNum}
	</select>
	
	<!-- context가 포함된 모든 질문글을 가져온다. -->
	<select id="searchByContext" parameterType="java.util.ArrayList" resultMap="QuestionResult">
	select
	    *
	from
		tag,
	    (select
            *
        from
            q_board
        <trim prefix="where" prefixOverrides="and|or">
        	<foreach collection="list" item="item">and contains(questioncontent, '%${item}%') >0</foreach>
        </trim>
        ) searched
	where searched.questionnum = tag.questionnum(+)
	order by searched.questionnum, tag.tagnum
	</select>
	
	<select id="getQuestionTag" parameterType="Question" resultType="Tag">
		select tag from tag where questionNum = #{questionNum} order by tag asc
	</select>
	
	<select id="getQuestionTime" parameterType="int" resultType="checkTime">
		SELECT questionNum, trunc ((TO_char (sysdate, 'YYYYMMDD') - TO_char (REGDATE, 'YYYYMMDD'))/(30*12), 0) year
	  ,	trunc ((TO_char (sysdate, 'YYYYMMDD') - TO_char (REGDATE, 'YYYYMMDD'))/30, 0) month
      , trunc (TO_char (sysdate, 'YYYYMMDD') - TO_char (REGDATE, 'YYYYMMDD'), 0) day
      , trunc ((TO_char (sysdate, 'YYYYMMDD') - TO_char (REGDATE, 'YYYYMMDD')), 0)*24 hour
      , trunc ((TO_char (sysdate, 'YYYYMMDD') - TO_char (REGDATE, 'YYYYMMDD')), 0)*24*60 minute
  		FROM q_board where questionNum = #{questionNum}
	</select>
	<!-- 전체 질문글 가져오기 -->
	<select id="getAllQuestion" resultType="Question">
		select * from q_board order by questionNum desc
	</select>
	<select id="search_no_answered" resultMap="QuestionResult">
	select
	    *
	from
		tag,
	    (select
	        q_board.*
	    from
	        q_board,
	        (select
	            q_reply.*
	        from
	            q_reply,
	            (select
	                max(replynum) as answered
	            from
	                q_reply
	            group by
	                questionnum
	            ) reply
	        where q_reply.replynum = reply.answered
	        ) no_dupl
	    where
	        q_board.questionnum = no_dupl.questionnum(+)
	        and no_dupl.questionnum is null
	    ) no_answer
	where no_answer.questionnum = tag.questionnum(+)
	order by no_answer.questionnum
	</select>
</mapper>
